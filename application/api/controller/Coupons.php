<?php
///**
// * Created by PhpStorm.
// * User: yaorui
// * Date: 2017/9/11
// * Time: 14:31
// */
namespace app\api\controller;

use think\Request;

class Coupons extends Base
{
    public function get_list(Request $request)
    {
        $input = $request->get();
        $ret = m('Coupon')->getSearchResult($input);
        return $this->sendSuccess($ret);
    }

    public function get_detail(Request $request, $id = 0)
    {
        $data = m('Coupon')->findOrFail($id);
        return $this->sendSuccess($data);
    }

    public function post(Request $request)
    {
        $input = $request->post();
        $rule = [
            'title|优惠券名称' => 'require|max:255',
            'promotion_type|优惠券类型' => 'require|between:1,4',
            'deduction|优惠券金额' => 'requireIf:promotion_type,1|number',
            'discount_rate|折扣率' => 'requireIf:promotion_type,2|number|between:0,99',
            'present_lesson_times|赠送课次' => 'requireIf:promotion_type,3|number|>:0',
            'present_lesson_hours|赠送课时' => 'requireIf:promotion_type,4|number|>:0',
            'branch_scope|校区促销范围' => 'require|array',
            'lesson_scope|课程促销范围' => 'require|array',
            'start_time|优惠券有效时间期' => 'require|date',
            'end_time|优惠券有效时间期' => 'require|date',
            'number|优惠券发行数目' => 'require|number',
        ];
        $right = $this->validate($input, $rule);
        if ($right !== true) {
            return $this->sendError($right);
        }
        $coupon = m('Coupon');
        $result = $coupon->addRule($input);
        if (!$result) {
            return $this->sendError(400, $coupon->getError());
        }
        return $this->sendSuccess();
    }

    public function put(Request $request)
    {
        return $this->sendError(400, '不支持对优惠规则进行修改');
    }

    public function delete(Request $request)
    {
        return parent::delete($request); // TODO: Change the autogenerated stub
    }

    public function do_status(Request $request)
    {
        $id = $request->param('id');
        $input = $request->only(['status']);
        $coupon = m('Coupon')->findOrFail($id);
        $result = $coupon->changeStatus($input);
        if (!$result) {
            return $this->sendError(400, $coupon->getError());
        }
        return $this->sendSuccess();
    }
}